<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bill&#39;s Thought</title>
    <link>https://billguo.cc/</link>
    <description>Recent content on Bill&#39;s Thought</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 16 Sep 2016 20:43:44 +0000</lastBuildDate>
    
        <atom:link href="https://billguo.cc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于</title>
      <link>https://billguo.cc/about/</link>
      <pubDate>Tue, 14 Jul 2015 21:38:52 +0800</pubDate>
      
      <guid>https://billguo.cc/about/</guid>
      
        <description>&lt;p&gt;Bill Guo&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;邮箱：billguocs#gmail.com&lt;/li&gt;
&lt;li&gt;技能：Java/Js&lt;/li&gt;
&lt;li&gt;爱好：多&lt;/li&gt;
&lt;li&gt;简介：多学习，多踩坑，加强填坑能力&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>sublime text3 常用快捷键</title>
      <link>https://billguo.cc/post/development/sublime-shortcut-keys/</link>
      <pubDate>Fri, 16 Sep 2016 20:43:44 +0000</pubDate>
      
      <guid>https://billguo.cc/post/development/sublime-shortcut-keys/</guid>
      
        <description>

&lt;p&gt;Sublime Text3 常用的一些快捷键操作：包括跳转，编辑，选择，查找等。&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;goto-anything-navigation&#34;&gt;Goto Anything (Navigation)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Goto Anything: &lt;code&gt;Ctrl + P&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Goto Symbol: &lt;code&gt;Ctrl + R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Goto Line: &lt;code&gt;Ctrl + G&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;editing-text&#34;&gt;Editing text&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Insert line before / after - &lt;code&gt;Ctrl + Shift + Return&lt;/code&gt; / &lt;code&gt;Ctrl + Return&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copy line / Paste from history - &lt;code&gt;Ctrl + C&lt;/code&gt; / &lt;code&gt;Ctrl + K, Ctrl + V&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Delete to beginning / end - &lt;code&gt;Ctrl + Shift + Backspace&lt;/code&gt; / &lt;code&gt;Ctrl + K&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Delete / Cut a line - &lt;code&gt;Ctrl + Shift + K&lt;/code&gt; / &lt;code&gt;Ctrl + X&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Soft Undo / Redo - &lt;code&gt;Ctrl + U&lt;/code&gt; / &lt;code&gt;Ctrl + Shift + U&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Upper / lower case - &lt;code&gt;Ctrl + K, Ctrl + U&lt;/code&gt; / &lt;code&gt;Ctrl + K, Ctrl + L&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Joining Lines - &lt;code&gt;Ctrl + J&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Bubble the line up / down - &lt;code&gt;Ctrl + Shift + up&lt;/code&gt; / &lt;code&gt;Ctrl + Shift + down&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sort a line - &lt;code&gt;F9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Duplicating a line - &lt;code&gt;Ctrl + Shift + D&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Indent - Unindent - &lt;code&gt;Ctrl + ]&lt;/code&gt;, &lt;code&gt;Ctrl + [&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Commenting a line - &lt;code&gt;Ctrl + /&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Close HTML tag - &lt;code&gt;Alt + .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Wrap line at ruler - &lt;code&gt;Alt + Q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Transpose - &lt;code&gt;Ctrl + T&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;selection&#34;&gt;Selection&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Multiple selection - &lt;code&gt;Ctrl + clicks at multiple places&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Column Selection - &lt;code&gt;Ctrl + Alt + Up&lt;/code&gt; or &lt;code&gt;Ctrl + Alt + Down&lt;/code&gt; / &lt;code&gt;Esc&lt;/code&gt; for going back to single&lt;/li&gt;
&lt;li&gt;Split block of selection into multiple lines - &lt;code&gt;Ctrl + Shift + L&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select word with multiple occurrences - &lt;code&gt;Ctrl + D&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Quick skip - &lt;code&gt;Ctrl + K, Ctrl + D&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Selecting a line - &lt;code&gt;Ctrl + L&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Expand selection to brackets - &lt;code&gt;Ctrl + Shift + M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Expand selection to indentation - &lt;code&gt;Ctrl + Shift + J&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Expand selection to scope - &lt;code&gt;Ctrl + Shift + Space&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;navigation&#34;&gt;Navigation&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Goto symbol in project - &lt;code&gt;Ctrl + Shift + R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Goto definition - &lt;code&gt;F12&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Goto beginning / end of a line - &lt;code&gt;Home&lt;/code&gt; / &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Goto matching bracket - &lt;code&gt;Ctrl + M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Move back / forward in history - &lt;code&gt;Alt + -&lt;/code&gt; / &lt;code&gt;Alt + Shift + -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Code fold / unfold - &lt;code&gt;Ctrl + Shift + [&lt;/code&gt; / &lt;code&gt;Ctrl + Shift + ]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;find&#34;&gt;Find&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Find - &lt;code&gt;Ctrl + F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Find next - &lt;code&gt;F3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Find previous - &lt;code&gt;Shift + F3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Find all - &lt;code&gt;Alt + Return&lt;/code&gt; (while find window is open)&lt;/li&gt;
&lt;li&gt;Use selection to find - &lt;code&gt;Ctrl + E&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Incremental find - &lt;code&gt;Ctrl + I&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Incremental find previous - &lt;code&gt;Ctrl + Shift + I&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Find all with incremental find - &lt;code&gt;Alt + Return&lt;/code&gt; (while the panel is open)&lt;/li&gt;
&lt;li&gt;Replace panel - &lt;code&gt;Ctrl + H&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace next - &lt;code&gt;Ctrl + Shift + H&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace all - &lt;code&gt;Ctrl + Alt + Return&lt;/code&gt; (Only when replace panel is open)&lt;/li&gt;
&lt;li&gt;Add selection to replace - &lt;code&gt;Ctrl + Shift + E&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Quick find - &lt;code&gt;Ctrl + F3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Quick find previous - &lt;code&gt;Ctrl + Shift + F3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Quick find all - &lt;code&gt;Alt + F3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Find in project - &lt;code&gt;Ctrl + Shift + F&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;others&#34;&gt;Others&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Opening User settings - &lt;code&gt;^ + ,&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Python Console - &lt;code&gt;^ + Backticks&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Command Palette - &lt;code&gt;Ctrl + Shift + P&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>全排列问题(1)</title>
      <link>https://billguo.cc/post/development/dfs/</link>
      <pubDate>Tue, 11 Aug 2015 14:52:17 +0800</pubDate>
      
      <guid>https://billguo.cc/post/development/dfs/</guid>
      
        <description>&lt;p&gt;全排列问题，指假如给定字符串，输出所有子串可能的排列的问题。解法比较多，递归非递归都可以。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;深度优先搜素（Depth First Search,DFS)
搜索算法的一种。是沿着树的深度遍历树的节点，尽可能深的搜索树的分支。当节点 v 的所在边都己被探寻过，搜索将回溯到发现节点 v 的那条边的起始节点。这一过程一直进行到已发现从源节点可达的所有节点为止。如果还存在未被发现的节点，则选择其中一个作为源节点并重复以上过程，整个进程反复进行直到所有节点都被访问为止。属于盲目搜索。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;DFS 的基本模型：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;判断边界&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;尝试每一种可能&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;        &lt;span class=&#34;err&#34;&gt;继续下一步&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关键代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bunch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;vis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bunch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bunch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;vis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// End of for
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;p&gt;全排列问题还有很多种变形问题，比如涉及去重等等。后面再具体补充。&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
